@{
    var isCentral = IsCenter();
}

@if (ModalModel.Overlay)
{
    <div class="modal-overlay @ModalModel.CssClass" @onclick="() => { OnOverlayClicked(); }">
        <div @onclick:stopPropagation
         class="modal-content-container @ModalModel.CssClass"
         style="@($"width: {ModalModel.Width}; height: {ModalModel.Height}; " + $"position: {(isCentral ? "static" : "absolute")}; left: {ModalModel.X}; top: {ModalModel.Y};")">
            @ModalModel.Fragment
        </div>
    </div>
}
else
{
    <div @onclick:stopPropagation
     class="@($"modal-content-container no-layer {(isCentral ? "central" : "")} {ModalModel.CssClass}")"
     style="@($"width: {ModalModel.Width}; height: {ModalModel.Height}; " + $"{(!isCentral ? $"left: {ModalModel.X}; top: {ModalModel.Y};" : "")}")">
        @ModalModel.Fragment
    </div>
}

<style>
    .modal-overlay {
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        background: rgba(26, 26, 26, 0.6);
    }

    .modal-content-container {
        display: flex;
    }

        .modal-content-container.no-layer {
            position: absolute;
        }

            .modal-content-container.no-layer.central {
                left: 50%;
                top: 50%;
                transform: translate(-50%, -50%);
            }
</style>